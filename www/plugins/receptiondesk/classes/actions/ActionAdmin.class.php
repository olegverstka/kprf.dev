<?php//===============================================================class PluginReceptiondesk_ActionAdmin extends PluginReceptiondesk_Inherit_ActionAdmin{//===============================================================	protected $sMenuItemSelect='admin';	protected $sMenuSubItemSelect='admin';//===============================================================	protected function RegisterEvent(){		parent::RegisterEvent();		$this->AddEventPreg('/^receptiondesk$/i','/^categories$/i','EventAdminreceptiondeskCategoryList');		$this->AddEventPreg('/^receptiondesk$/i','/^history$/i','/^(page([1-9]\d{0,5}))?$/i','EventAdminReceptiondeskList');		$this->AddEventPreg('/^receptiondesk$/i','/^history$/i','/^category$/i','/^[\w\-\_]+$/i','/^(page([1-9]\d{0,5}))?$/i','EventAdminReceptiondeskList');		$this->AddEventPreg('/^receptiondesk$/i','/^answered$/i','/^(page([1-9]\d{0,5}))?$/i','EventAdminReceptiondeskAnsweredList');		$this->AddEventPreg('/^receptiondesk$/i','/^answered$/i','/^category$/i','/^[\w\-\_]+$/i','/^(page([1-9]\d{0,5}))?$/i','EventAdminReceptiondeskAnsweredList');		$this->AddEventPreg('/^receptiondesk$/i','/^question$/i','/^edit$/i','/^(\d+)\.html$/i','EventAdminReceptiondeskEditQuestion');		$this->AddEventPreg('/^receptiondesk$/i','/^question$/i','/^(\d+)\.html$/i','EventAdminReceptiondeskQuestion');		$this->AddEventPreg('/^receptiondesk$/i','/^category$/i','/^[\w\-\_]+$/i','/^(page([1-9]\d{0,5}))?$/i','EventAdminReceptiondeskNewList');		$this->AddEventPreg('/^receptiondesk$/i','/^(page([1-9]\d{0,5}))?$/i','EventAdminReceptiondeskNewList');	}//===============================================================	protected function EventAdminReceptiondeskEditQuestion(){		if(!($oQuestion=$this->PluginReceptiondesk_Question_GetQuestionById($this->GetParamEventMatch(2,1)))) return parent::EventNotFound();		$this->Viewer_AddMenu('receptiondesk_admin',Plugin::GetTemplatePath(__CLASS__).'menu.receptiondesk_admin.tpl');		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_receptiondesk_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_question_edit_title'));		$this->Viewer_Assign('aCategories',$this->PluginReceptiondesk_Category_GetCategories());		$this->Viewer_Assign('oQuestion',$oQuestion);		$this->Lang_AddLangJs(array('plugin.receptiondesk.receptiondesk_admin_question_create_author_files_remove_confirm',));		$this->sMenuItemSelect='receptiondesk';		$this->SetTemplateAction('receptiondesk_question_edit');	}//===============================================================	protected function EventAdminReceptiondeskQuestion(){		if(!($oQuestion=$this->PluginReceptiondesk_Question_GetQuestionById($this->GetParamEventMatch(1,1)))) return parent::EventNotFound();		$this->Viewer_AddMenu('receptiondesk_admin',Plugin::GetTemplatePath(__CLASS__).'menu.receptiondesk_admin.tpl');		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_receptiondesk_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_receptiondesk_answer_title'));		$this->sMenuItemSelect='receptiondesk';		$this->Viewer_Assign('oQuestion',$oQuestion);		$this->Lang_AddLangJs(array('plugin.receptiondesk.receptiondesk_admin_question_create_author_files_remove_confirm','plugin.receptiondesk.receptiondesk_admin_question_remove_confirm',));		$this->SetTemplateAction('receptiondesk_question');	}//===============================================================	public function EventAdminReceptiondeskNewList(){		$this->Viewer_AddMenu('receptiondesk_admin',Plugin::GetTemplatePath(__CLASS__).'menu.receptiondesk_admin.tpl');		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_receptiondesk_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_receptiondesk_list_new'));		if(preg_match("/^category$/i",$this->getParam(0),$aMatch)){			if(!$oCategory=$this->PluginReceptiondesk_Category_GetCategoryByUrl($this->GetParamEventMatch(1,0))) return parent::EventNotFound();			$iPage=$this->GetParamEventMatch(2,2) ? $this->GetParamEventMatch(2,2) : 1;			$this->Viewer_Assign('oCurrentCategory',$oCategory);			$aResult=$this->PluginReceptiondesk_Question_GetNewQuestionList($iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),0,$oCategory->getId());			$aPaging=$this->Viewer_MakePaging($aResult['count'],$iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),Config::Get('pagination.pages.count'),Router::GetPath('admin').'receptiondesk/category/'.$oCategory->getUrl().'/');		}else{			$iPage=$this->GetParamEventMatch(0,2) ? $this->GetParamEventMatch(0,2) : 1;			$aResult=$this->PluginReceptiondesk_Question_GetNewQuestionList($iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),0);			$aPaging=$this->Viewer_MakePaging($aResult['count'],$iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),Config::Get('pagination.pages.count'),Router::GetPath('admin').'receptiondesk/');		}		$this->Viewer_Assign('iCountQuestionNew',$aResult['count']);		$this->Viewer_Assign('aQuestionList',$aResult['collection']);		$this->Viewer_Assign('aPaging',$aPaging);		$this->sMenuItemSelect='receptiondesk';		$this->sMenuSubItemSelect='receptiondesk_new';		$this->Viewer_Assign('aCategories',$this->PluginReceptiondesk_Category_GetCategories());		$this->Viewer_Assign('sReceptiondeskTemplatePath',Plugin::GetTemplatePath(__CLASS__));		$this->Lang_AddLangJs(array('plugin.receptiondesk.receptiondesk_admin_question_create_author_files_remove_confirm','plugin.receptiondesk.receptiondesk_admin_question_remove_confirm',));		$this->SetTemplateAction('receptiondesk_admin');	}//===============================================================	public function EventAdminReceptiondeskList(){		$this->Viewer_AddMenu('receptiondesk_admin',Plugin::GetTemplatePath(__CLASS__).'menu.receptiondesk_admin.tpl');		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_receptiondesk_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_receptiondesk_list_history'));		if(preg_match("/^category$/i",$this->getParam(1),$aMatch)){			if(!$oCategory=$this->PluginReceptiondesk_Category_GetCategoryByUrl($this->GetParamEventMatch(2,0))) return parent::EventNotFound();			$iPage=$this->GetParamEventMatch(3,2) ? $this->GetParamEventMatch(3,2) : 1;			$this->Viewer_Assign('oCurrentCategory',$oCategory);			$aResult=$this->PluginReceptiondesk_Question_GetQuestionList($iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),0,$oCategory->getId());			$aPaging=$this->Viewer_MakePaging($aResult['count'],$iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),Config::Get('pagination.pages.count'),Router::GetPath('admin').'receptiondesk/history/category/'.$oCategory->getUrl().'/');		}else{			$iPage=$this->GetParamEventMatch(1,2) ? $this->GetParamEventMatch(1,2) : 1;			$aResult=$this->PluginReceptiondesk_Question_GetQuestionList($iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),0);			$aPaging=$this->Viewer_MakePaging($aResult['count'],$iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),Config::Get('pagination.pages.count'),Router::GetPath('admin').'receptiondesk/history/');		}		$this->Viewer_Assign('aQuestionList',$aResult['collection']);		$this->Viewer_Assign('aPaging',$aPaging);		$this->sMenuItemSelect='receptiondesk';		$this->sMenuSubItemSelect='receptiondesk_history';		$this->Viewer_Assign('iCountQuestionNew',$this->PluginReceptiondesk_Question_GetCountNewQuestionList(0));		$this->Viewer_Assign('aCategories',$this->PluginReceptiondesk_Category_GetCategories());		$this->Viewer_Assign('sType','history');		$this->Viewer_Assign('sReceptiondeskTemplatePath',Plugin::GetTemplatePath(__CLASS__));		$this->Lang_AddLangJs(array('plugin.receptiondesk.receptiondesk_admin_question_create_author_files_remove_confirm','plugin.receptiondesk.receptiondesk_admin_question_remove_confirm',));		$this->SetTemplateAction('receptiondesk_admin');	}//===============================================================	public function EventAdminReceptiondeskAnsweredList(){		$this->Viewer_AddMenu('receptiondesk_admin',Plugin::GetTemplatePath(__CLASS__).'menu.receptiondesk_admin.tpl');		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_receptiondesk_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_receptiondesk_list_answered'));		if(preg_match("/^category$/i",$this->getParam(1),$aMatch)){			if(!$oCategory=$this->PluginReceptiondesk_Category_GetCategoryByUrl($this->GetParamEventMatch(2,0))) return parent::EventNotFound();			$iPage=$this->GetParamEventMatch(3,2) ? $this->GetParamEventMatch(3,2) : 1;			$this->Viewer_Assign('oCurrentCategory',$oCategory);			$aResult=$this->PluginReceptiondesk_Question_GetQuestionList($iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),1,$oCategory->getId());			$aPaging=$this->Viewer_MakePaging($aResult['count'],$iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),Config::Get('pagination.pages.count'),Router::GetPath('admin').'receptiondesk/answered/category/'.$oCategory->getUrl().'/');		}else{			$iPage=$this->GetParamEventMatch(1,2) ? $this->GetParamEventMatch(1,2) : 1;			$aResult=$this->PluginReceptiondesk_Question_GetQuestionList($iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),1);			$aPaging=$this->Viewer_MakePaging($aResult['count'],$iPage,Config::Get('plugin.receptiondesk.receptiondesk_question_per_page'),Config::Get('pagination.pages.count'),Router::GetPath('admin').'receptiondesk/answered/');		}		$this->Viewer_Assign('aQuestionList',$aResult['collection']);		$this->Viewer_Assign('aPaging',$aPaging);		$this->sMenuItemSelect='receptiondesk';		$this->sMenuSubItemSelect='receptiondesk_answered';		$this->Viewer_Assign('iCountQuestionNew',$this->PluginReceptiondesk_Question_GetCountNewQuestionList(0));		$this->Viewer_Assign('aCategories',$this->PluginReceptiondesk_Category_GetCategories());		$this->Viewer_Assign('sType','answered');		$this->Viewer_Assign('sReceptiondeskTemplatePath',Plugin::GetTemplatePath(__CLASS__));		$this->Lang_AddLangJs(array('plugin.receptiondesk.receptiondesk_admin_question_create_author_files_remove_confirm','plugin.receptiondesk.receptiondesk_admin_question_remove_confirm',));		$this->SetTemplateAction('receptiondesk_admin');	}//===============================================================	public function EventAdminreceptiondeskCategoryList(){		$this->Viewer_AddMenu('receptiondesk_admin',Plugin::GetTemplatePath(__CLASS__).'menu.receptiondesk_admin.tpl');		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_title'));		$this->Viewer_AddHtmlTitle($this->Lang_Get('plugin.receptiondesk.receptiondesk_admin_categories_title'));		$this->Viewer_Assign('aCategories',$this->PluginReceptiondesk_Category_GetCategories());		$this->Lang_AddLangJs(array('plugin.receptiondesk.receptiondesk_admin_categories_create_title','plugin.receptiondesk.receptiondesk_admin_categories_edit_title','plugin.receptiondesk.receptiondesk_admin_categories_remove_confirm',));		$this->sMenuItemSelect='receptiondesk_categories';		$this->SetTemplateAction('receptiondesk_categories');		$this->Viewer_Assign('sReceptiondeskTemplatePath',Plugin::GetTemplatePath(__CLASS__));	}//===============================================================	public function EventShutdown(){		parent::EventShutdown();		$this->Viewer_Assign('sMenuHeadItemSelect',$this->sMenuHeadItemSelect);		$this->Viewer_Assign('sMenuItemSelect',$this->sMenuItemSelect);		$this->Viewer_Assign('sMenuSubItemSelect',$this->sMenuSubItemSelect);	}//===============================================================}?>
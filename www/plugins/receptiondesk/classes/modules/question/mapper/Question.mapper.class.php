<?php//===============================================================class PluginReceptiondesk_ModuleQuestion_MapperQuestion extends Mapper{//===============================================================	public function AddQuestion(PluginReceptiondesk_ModuleQuestion_EntityQuestion $oQuestion){		$sql="INSERT INTO ".Config::Get('db.table.receptiondesk_questions')." (question_category_id,question_date_add,question_user_ip,question_text,question_text_source,question_text_hash,question_extra) VALUES(?d,?,?,?,?,?,?);";		if($iQuestionId=$this->oDb->query($sql,$oQuestion->getCategoryId(),$oQuestion->getDateAdd(),$oQuestion->getUserIp(),$oQuestion->getText(),$oQuestion->getTextSource(),$oQuestion->getTextHash(),$oQuestion->getExtra())) return $iQuestionId;		return false;	}//===============================================================	public function UpdateQuestion(PluginReceptiondesk_ModuleQuestion_EntityQuestion $oQuestion){		$sql="UPDATE ".Config::Get('db.table.receptiondesk_questions')." SET question_category_id=?d,question_date_edit=?,question_text=?,question_text_source=?,answer_text=?,answer_text_source=?,question_publish=?d,answer_date_add=? WHERE question_id=?d;";		if($this->oDb->query($sql,$oQuestion->getCategoryId(),$oQuestion->getDateEdit(),$oQuestion->getText(),$oQuestion->getTextSource(),$oQuestion->getAnswerText(),$oQuestion->getAnswerTextSource(),$oQuestion->getPublish(),$oQuestion->getAnswerDateAdd(),$oQuestion->getId())!==false) return true;		return false;	}//===============================================================	public function DeleteQuestion($sQuestionId){		$sql="DELETE FROM ".Config::Get('db.table.receptiondesk_questions')." WHERE question_id=?d;";		if($this->oDb->query($sql,$sQuestionId)!==false) return true;		return false;	}//===============================================================	public function GetQuestionUnique($sHash,$sUserIp){		$sql="SELECT question_id FROM ".Config::Get('db.table.receptiondesk_questions')." WHERE question_text_hash=? AND question_user_ip=? LIMIT 0,1;";		if($aRow=$this->oDb->selectRow($sql,$sHash,$sUserIp)) return true;		return false;	}//===============================================================	public function GetQuestionByArrayId($aArrayId,$aOrder=null){		if(!is_array($aArrayId) || count($aArrayId)==0) return array();		if(!is_array($aOrder)) $aOrder=array($aOrder);		$sOrder='';		foreach($aOrder as $key=>$value){			$value=(string)$value;			if(!in_array($key,array('question_id','question_category_id','question_date_add','question_user_ip'))){				unset($aOrder[$key]);			}elseif(in_array($value,array('asc','desc'))){				$sOrder.=" {$key} {$value},";			}		}		$sOrder=trim($sOrder,',');		$sql="SELECT * FROM ".Config::Get('db.table.receptiondesk_questions')." WHERE question_id IN(?a) ORDER BY { FIELD(question_id,?a) }";		if($sOrder!='') $sql.=$sOrder;		$aQuestion=array();		if($aRows=$this->oDb->select($sql,$aArrayId,$sOrder=='' ? $aArrayId : DBSIMPLE_SKIP)) foreach($aRows as $aRow) $aQuestion[]=Engine::GetEntity('PluginReceptiondesk_ModuleQuestion_EntityQuestion',$aRow);		return $aQuestion;	}//===============================================================	public function GetQuestionByFilter($aFilter,&$iCount,$iCurrPage,$iPerPage){		$sWhere=$this->buildQuestionFilter($aFilter);		if(!isset($aFilter['order'])) $aFilter['order']=' question_date_add DESC ';		if(!is_array($aFilter['order'])) $aFilter['order']=array($aFilter['order']);		$sql="SELECT question_id FROM ".Config::Get('db.table.receptiondesk_questions')." WHERE 1=1 ".$sWhere." ORDER BY ".implode(', ',$aFilter['order'])." LIMIT ?d,?d;";		$aQuestion=array();		if($aRows=$this->oDb->selectPage($iCount,$sql,($iCurrPage-1)*$iPerPage,$iPerPage)) foreach($aRows as $oQuestion) $aQuestion[]=$oQuestion['question_id'];		return $aQuestion;	}//===============================================================	public function GetCountQuestionByFilter($aFilter){		$sWhere=$this->buildQuestionFilter($aFilter);		$sql="SELECT count(question_id) AS count FROM ".Config::Get('db.table.receptiondesk_questions')." WHERE 1=1 ".$sWhere.";";		if($aRow=$this->oDb->selectRow($sql)) return $aRow['count'];		return false;	}//===============================================================	protected function buildQuestionFilter($aFilter){		$sWhere='';		if(isset($aFilter['question_date_more'])) $sWhere.=" AND question_date_add>'".mysql_real_escape_string($aFilter['question_date_more'])."'";		if(isset($aFilter['question_new'])) $sWhere.=" AND question_date_add>='".$aFilter['question_new']."'";		if(isset($aFilter['question_publish'])) $sWhere.=" AND question_publish=".(int)$aFilter['question_publish'];		if(isset($aFilter['question_user_ip'])){			if(!is_array($aFilter['question_user_ip'])) $aFilter['question_user_ip']=array($aFilter['question_user_ip']);			$sWhere.=" AND question_user_ip IN ('".join("','",$aFilter['question_user_ip'])."')";		}		if(isset($aFilter['question_category_id'])){			if(!is_array($aFilter['question_category_id'])) $aFilter['question_category_id']=array($aFilter['question_category_id']);			$sWhere.=" AND question_category_id IN ('".join("','",$aFilter['question_category_id'])."')";		}		return $sWhere;	}//===============================================================	public function MoveQuestions($sCategoryId,$sRemoveCategoryId){		$sql="UPDATE ".Config::Get('db.table.receptiondesk_questions')." SET question_category_id=?d WHERE question_category_id=?d;";		if($this->oDb->query($sql,$sRemoveCategoryId,$sCategoryId)!==false) return true;		return false;	}//===============================================================}?>
<?php//===============================================================class PluginReceptiondesk_ModuleCategory extends Module{//===============================================================	protected $oMapper;//===============================================================	public function Init(){		$this->oMapper=Engine::GetMapper(__CLASS__);	}//===============================================================	public function AddCategory(PluginReceptiondesk_ModuleCategory_EntityCategory $oCategory){		if($sCategoryId=$this->oMapper->AddCategory($oCategory)){			$oCategory->setId($sCategoryId);			$this->Cache_Clean(Zend_Cache::CLEANING_MODE_MATCHING_TAG,array('receptiondesk_category_new'));			return $oCategory;		}		return false;	}//===============================================================	public function UpdateCategory(PluginReceptiondesk_ModuleCategory_EntityCategory $oCategory){		if($this->oMapper->UpdateCategory($oCategory)){			$this->Cache_Clean(Zend_Cache::CLEANING_MODE_MATCHING_TAG,array('receptiondesk_category_update','receptiondesk_category_update_{$oCategory->getId()}'));			$this->Cache_Delete('receptiondesk_category_{$oCategory->getId()}');			return true;		}		return false;	}//===============================================================	public function DeleteCategory(PluginReceptiondesk_ModuleCategory_EntityCategory $oCategory){		if($this->oMapper->DeleteCategory($oCategory)){			$this->Cache_Clean(Zend_Cache::CLEANING_MODE_MATCHING_TAG,array('receptiondesk_category_update','receptiondesk_category_update_{$oCategory->getId()}'));			$this->Cache_Delete('receptiondesk_category_{$oCategory->getId()}');			return true;		}		return false;	}//===============================================================	public function GetCategoryByUrl($sCategoryUrl){		if($sCategoryId=$this->oMapper->GetCategoryByUrl($sCategoryUrl)) return $this->GetCategoryById($sCategoryId);		return null;	}//===============================================================	public function GetCategoryByTitle($sCategoryTitle){		if($sCategoryId=$this->oMapper->GetCategoryByTitle($sCategoryTitle)) return $this->GetCategoryById($sCategoryId);		return null;	}//===============================================================	public function GetCategoryById($sCategoryId){		if(!is_numeric($sCategoryId)) return null;		$aCategory=$this->GetCategoryAdditionalData($sCategoryId);		if(isset($aCategory[$sCategoryId])) return $aCategory[$sCategoryId];		return null;	}//===============================================================	public function GetCountCategory(){		return $this->oMapper->GetCountCategory();	}//===============================================================	public function GetCategories($bReturnIdOnly=false){		$data=$this->oMapper->GetCategories();		if($bReturnIdOnly) return $data;		$data=$this->GetCategoryAdditionalData($data);		return $data;	}//===============================================================	public function GetCategoryAdditionalData($aCategoryId,$aOrder=null){		if(!is_array($aCategoryId)) $aCategoryId=array($aCategoryId);		$aCategory=$this->GetCategoryByArrayId($aCategoryId,$aOrder);		return $aCategory;	}//===============================================================	public function GetCategoryByArrayId($aCategoryId,$aOrder=null){		if(!$aCategoryId) return array();		if(Config::Get('sys.cache.solid')) return $this->GetCategoryByArrayIdSolid($aCategoryId,$aOrder);		if(!is_array($aCategoryId)) $aCategoryId=array($aCategoryId);		$aCategoryId=array_unique($aCategoryId);		$aCategory=$aCategoryIdNotNeedQuery=array();		$aCacheKeys=func_build_cache_keys($aCategoryId,'receptiondesk_category_');		if(false!==($data=$this->Cache_Get($aCacheKeys))){			foreach($aCacheKeys as $sValue=>$sKey){				if(array_key_exists($sKey,$data)){					if($data[$sKey]){						$aCategory[$data[$sKey]->getId()]=$data[$sKey];					}else{						$aCategoryIdNotNeedQuery[]=$sValue;					}				}			}		}		$aCategoryIdNeedQuery=array_diff($aCategoryId,array_keys($aCategory));		$aCategoryIdNeedQuery=array_diff($aCategoryIdNeedQuery,$aCategoryIdNotNeedQuery);		$aCategoryIdNeedStore=$aCategoryIdNeedQuery;		if($data=$this->oMapper->GetCategoryByArrayId($aCategoryIdNeedQuery)){			foreach($data as $oCategory){				$aCategory[$oCategory->getId()]=$oCategory;				$this->Cache_Set($oCategory,'receptiondesk_category_{$oCategory->getId()}',array(),60*60*24*4);				$aCategoryIdNeedStore=array_diff($aCategoryIdNeedStore,array($oCategory->getId()));			}		}		foreach($aCategoryIdNeedStore as $sId) $this->Cache_Set(null,'receptiondesk_category_{$sId}',array(),60*60*24*4);		$aCategory=func_array_sort_by_keys($aCategory,$aCategoryId);		return $aCategory;	}//===============================================================	public function GetCategoryByArrayIdSolid($aCategoryId,$aOrder=null){		if(!is_array($aCategoryId)) $aCategoryId=array($aCategoryId);		$aCategoryId=array_unique($aCategoryId);		$aCategory=array();		$s=join(',',$aCategoryId);		if(false===($data=$this->Cache_Get('receptiondesk_category_id_{$s}'))){			$data=$this->oMapper->GetCategoryByArrayId($aCategoryId,$aOrder);			foreach($data as $oCategory) $aCategory[$oCategory->getId()]=$oCategory;			$this->Cache_Set($aCategory,'receptiondesk_category_id_{$s}',array('receptiondesk_category_update'),60*60*24*1);			return $aCategory;		}		return $data;	}//===============================================================}?>